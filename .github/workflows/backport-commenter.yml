name: Backport Commenter
run-name: Validate backports and notify PRs owners
on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:
    inputs:
        versions:
            description: "A comma seperated string of the x.y versions representing the backport labels to check. Example: 1.13,1.14,1.15"
            required: true
            type: string
        begin-date:
            description: Begin Date to check for PRs being merged.  In the format of YYYY-MM-DD.
            required: true
            type: string

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
  BPA_COMMENTER_BEGIN_DATE: "${{ vars.BEGIN_DATE }}" 
  BPA_COMMENTER_VERSIONS: "${{ vars.VERSIONS }}"

jobs:
  validate-backports-oss:
    if: ${{! endsWith('-enterprise', github.repository)}} # only run on non-enterprise repositories
    container: hashicorpdev/backport-assistant:claire-dev
    runs-on: [ 'ubuntu-latest' ]
    steps:
      - name: backport commenter
        env:
        # NOTE: BEGIN_DATE and VERSIONS are repository environment variables and
        # can be adjusted in the GitHub UI. 
          OWNER: hashicorp-releng-dev
          REPO: bpa-test-oss 
          SYNC_REPO: bpa-test-enterprise
        run: |
          backport-assistant validate \
            --owner "${OWNER}" --repo "${REPO}" --sync-repo "${SYNC_REPO}" --versions "${VERSIONS}" \
            --begin-date "${BEGIN_DATE}" --add-comment
  
  validate-backports-enterprise:
    container: hashicorpdev/backport-assistant:claire-dev
    runs-on: [ 'ubuntu-latest' ]
    # needs to run serially because github search api limits to 30 req/minute.
    # running in parallel will push it over the limit.
    needs:
      - validate-backports-oss
    if: ${{ always() }} && ${{! endsWith('-enterprise', github.repository)}} # only run on non-enterprise repositories
    steps:
      - name: backport commenter
        env:
          OWNER: hashicorp-releng-dev
          REPO: bpa-test-enterprise
        run: |
          backport-assistant validate \
            --owner "${OWNER}" --repo "${REPO}" --versions "${VERSIONS}" \
            --begin-date "${BEGIN_DATE}" --add-comment
